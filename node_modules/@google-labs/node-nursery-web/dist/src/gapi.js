/**
 * @license
 * Copyright 2023 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
export const loadGapi = async () => {
    if (!globalThis.document) {
        throw new Error("Cannot load gapi outside of a browser environment");
    }
    return (globalThis.gapi ||
        new Promise((resolve) => {
            const script = document.createElement("script");
            script.src = "https://apis.google.com/js/api.js";
            script.onload = () => {
                resolve(globalThis.gapi);
            };
            script.async = true;
            script.defer = true;
            document.body.appendChild(script);
        }));
};
export const loadClient = async (gapi) => {
    return (gapi.client ||
        new Promise((resolve) => {
            gapi.load("client", () => {
                resolve(gapi.client);
            });
        }));
};
export const loadAPIs = async (client, apis) => {
    const scopesToInitialize = Object.entries(apis)
        .filter(([_, key]) => {
        return !client[key];
    })
        .map(([url, _]) => url);
    await client.init({
        discoveryDocs: scopesToInitialize,
    });
    return client;
};
//# sourceMappingURL=gapi.js.map