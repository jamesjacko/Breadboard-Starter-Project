/**
 * @license
 * Copyright 2023 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
export const convert = (schema) => {
    if (!schema.type) {
        return "Any JSON object";
    }
    if (schema.type === "string" || schema.type === "number") {
        const result = `${schema.type}, ${schema.description}`;
        const { enum: validValues } = schema;
        if (validValues) {
            return `${result} (one of: ${validValues
                .map((value) => `"${value}"`)
                .join(", ")})`;
        }
        return result;
    }
    if (schema.type === "object") {
        const result = {};
        const properties = schema.properties;
        for (const [name, property] of Object.entries(properties)) {
            result[name] = convert(property);
        }
        return result;
    }
    if (schema.type === "array") {
        const items = schema.items || {};
        return [convert(items)];
    }
    throw new Error(`Failed to translate this schema to schemish:\n${JSON.stringify(schema, null, 2)}`);
};
export default async (inputs) => {
    const { schema } = inputs;
    return { schemish: convert(schema) };
};
//# sourceMappingURL=schemish.js.map