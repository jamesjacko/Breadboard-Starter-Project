/**
 * @license
 * Copyright 2023 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
export declare const PaLMKit: import("@google-labs/breadboard").KitConstructor<import("@google-labs/breadboard").GenericKit<{
    /**
     * Places an `generateText` node on the board.
     *
     * Use this node to generate text from a prompt.
     *
     * See [`generateText` node
     * reference](https://github.com/breadboard-ai/breadboard/blob/main/packages/palm-kit/README.md) for more information.
     */
    generateText: {
        describe: import("@google-labs/breadboard").NodeDescriberFunction;
        invoke: (inputs: import("@google-labs/breadboard").InputValues) => Promise<Partial<Record<string, import("@google-labs/breadboard").NodeValue>>>;
    };
    /**
     * Places an `embedText` node on the board.
     *
     * Use this node to embed text.
     *
     * See [`embedText` node
     * reference](https://github.com/breadboard-ai/breadboard/blob/main/packages/palm-kit/README.md) for more information.
     */
    embedText: {
        describe: import("@google-labs/breadboard").NodeDescriberFunction;
        invoke: (inputs: import("@google-labs/breadboard").InputValues) => Promise<Partial<Record<string, import("@google-labs/breadboard").NodeValue>>>;
    };
}>>;
export type PaLMKit = InstanceType<typeof PaLMKit>;
export default PaLMKit;
/**
 * This is a wrapper around existing kits for the new syntax to add types.
 *
 * This should transition to a codegen step, with typescript types constructed
 * from .describe() calls.
 */
import { NewNodeFactory as NodeFactory } from "@google-labs/breadboard";
export declare const palm: {
    generateText: NodeFactory<{
        text: string;
        PALM_KEY: string;
    }, {
        completion: string;
    }>;
};
//# sourceMappingURL=index.d.ts.map