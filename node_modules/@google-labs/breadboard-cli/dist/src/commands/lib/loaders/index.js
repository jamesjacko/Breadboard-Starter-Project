import { JSLoader } from "./javascript.js";
import { Loader } from "../loader.js";
import { TypeScriptLoader } from "./typescript.js";
import { JSONLoader } from "./json.js";
const supportedFileTypes = ["js", "ts", "json"];
export class Loaders {
    #loaderInstance;
    static get supportedFileTypes() {
        return supportedFileTypes;
    }
    constructor(loader) {
        if (loader === "js") {
            this.#loaderInstance = new JSLoader();
        }
        else if (loader === "ts") {
            this.#loaderInstance = new TypeScriptLoader();
        }
        else if (loader === "json") {
            this.#loaderInstance = new JSONLoader();
        }
        else {
            throw new Error(`Unsupported file type ${loader}`);
        }
    }
    async load(filePath, options) {
        return this.#loaderInstance.load(filePath, options);
    }
}
export { Loader };
//# sourceMappingURL=index.js.map